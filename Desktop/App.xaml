<Application x:Class="Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Desktop"
             xmlns:vm="clr-namespace:Desktop.ViewModel"
             xmlns:converters="clr-namespace:Desktop.Converters"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Icons/headphones-with-music-note.xaml"/>
                <ResourceDictionary Source="Resources/Icons/left-arrow.xaml"/>
                <ResourceDictionary Source="Resources/Icons/music-player-play.xaml"/>
                <ResourceDictionary Source="Resources/Icons/right-arrow.xaml"/>
                <ResourceDictionary Source="Resources/Icons/back.xaml"/>
                <ResourceDictionary Source="Resources/Icons/edit.xaml"/>
                <ResourceDictionary Source="Resources/Icons/garbage.xaml"/>
                <ResourceDictionary Source="Resources/Icons/house.xaml"/>
                <ResourceDictionary Source="Resources/Icons/next-1.xaml"/>
                <ResourceDictionary Source="Resources/Icons/upload-1.xaml"/>
                <ResourceDictionary Source="Resources/Icons/copyright.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--
        <converters:GenreToString x:Key="GenreToString"/> 
        -->
            <vm:SearchFocus x:Key="SearchFocusSongs">Songs</vm:SearchFocus>
            <vm:SearchFocus x:Key="SearchFocusAlbums">Albums</vm:SearchFocus>
            <vm:SearchFocus x:Key="SearchFocusArtists">Artists</vm:SearchFocus>
            <vm:SearchFocus x:Key="SearchFocusAny">Any</vm:SearchFocus>


            <converters:CollapseOnZeroConverter x:Key="CollapseOnZero"/>
            <converters:TimeSpanConverter x:Key="TimeSpanConverter"/>
            <converters:InvisibleOnSearchFocusAny x:Key="InvisibleOnSearchFocusAny"/>
            <converters:GenreDisplayTextConverter x:Key="GenreDisplayTextConverter"/>
            <converters:ViewModelToEditTitleConverter x:Key="ViewModelToEditTitleConverter"/>
            <converters:CollapseYoutubeOnEmptyLinkConverter x:Key="CollapseYoutubeOnEmptyLinkConverter"/>
            <converters:NextPageButtonVisibilityConverter x:Key="NextPageButtonVisibilityConverter"/>
            <converters:PreviousPageButtonVisibilityConverter x:Key="PreviousPageButtonVisibilityConverter"/>
            <converters:AdminContentVisibilityConverter x:Key="AdminContentVisibilityConverter"/>


            <Color x:Key="WindowBackgroundColor">#202020</Color>
            <!--<Color x:Key="DeepPurpleColor">#491f91</Color>-->
            <Color x:Key="DeepPurpleColor">#DE8451</Color>
            <Color x:Key="LightFontColor">#FAFAFA</Color>
            <Color x:Key="DarkFontColor">#050505</Color>
            <Color x:Key="LightControlBackgroundColor">#AAAAAA</Color>
            <Color x:Key="DarkControlBackgroundColor">#444444</Color>
            <Color x:Key="AccentColor">#DE8451</Color>
            
            

            <SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}"/>
            <SolidColorBrush x:Key="DeepPurpleColorBrush" Color="{StaticResource DeepPurpleColor}"/>
            <SolidColorBrush x:Key="LightFontColorBrush" Color="{StaticResource LightFontColor}"/>
            <SolidColorBrush x:Key="DarkFontColorBrush" Color="{StaticResource DarkFontColor}"/>
            <SolidColorBrush x:Key="LightControlBackgroundColorBrush" Color="{StaticResource LightControlBackgroundColor}"/>
            <SolidColorBrush x:Key="DarkControlBackgroundColorBrush" Color="{StaticResource DarkControlBackgroundColor}"/>
            <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}"/>

            
           

            <Style x:Key="NormalText" TargetType="TextBlock">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontStyle" Value="Normal"/>
                <Setter Property="Foreground" Value="{StaticResource LightFontColorBrush}"/>
            </Style>
            <!--<Style TargetType="TextBlock" BasedOn="{StaticResource NormalText}"/>-->

            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="Auto"/>
            </Style>

            <Style x:Key="TitleText" TargetType="TextBlock" BasedOn="{StaticResource NormalText}">
                <Setter Property="FontSize" Value="64"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
            <Style x:Key="MediumText" TargetType="TextBlock" BasedOn="{StaticResource NormalText}">
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style x:Key="LargeText" TargetType="TextBlock" BasedOn="{StaticResource NormalText}">
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <Style x:Key="VeryLargeText" TargetType="TextBlock" BasedOn="{StaticResource NormalText}">
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <Style x:Key="UnderlinedOnMouseOver" BasedOn="{StaticResource NormalText}" TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextDecorations" Value="Underline"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <!-- Buttons -->
            <Style x:Key="TransparentImageButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent">

                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="Border"  Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DeepPurpleColorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BorderHighlightButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="Border"  BorderThickness="0" BorderBrush="{StaticResource DeepPurpleColorBrush}" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="2"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FlatTileButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="{StaticResource LightControlBackgroundColorBrush}"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="Border"  Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DeepPurpleColorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource FlatTileButton}"/>

            <Style x:Key="FlatEuroButton" TargetType="Button">
                <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}"/>
                <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="Border"
                                    CornerRadius="0,15,0,15"
                                    BorderThickness="2"
                                    BorderBrush="{TemplateBinding Background}"
                                    Background="{TemplateBinding Background}"
                                    Padding="10"
                                    Margin="-1">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentColorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--LISTVIEW-->
            <Style TargetType="ListView">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                <Setter Property="Visibility" Value="{Binding Path=Items.Count, 
                                                          Converter={StaticResource CollapseOnZero}, 
                                                          RelativeSource={RelativeSource Self}}"/>
            </Style>

            <Style TargetType="Thumb">
                <Setter Property="Visibility" Value="Hidden"/>
            </Style>

            <!--
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Padding" Value="0,10,0,10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border CornerRadius="0" SnapsToDevicePixels="True"  
                                BorderThickness="0,0,0,1"   
                                BorderBrush="{StaticResource DarkControlBackgroundColorBrush}"   
                                Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" CornerRadius="0" BorderThickness="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <GridViewRowPresenter Grid.RowSpan="2"   
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"   
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1"/>
                                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource DeepPurpleColorBrush}"/>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource DarkControlBackgroundColorBrush}"/>
                                    <Setter Property="Foreground" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <Style TargetType="Image">
                <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
            </Style>


            <!--DATAGRID-->
            <Style TargetType="DataGrid">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightControlBackgroundColorBrush}"/>
                <Setter Property="Visibility" Value="{Binding Path=Items.Count,
                                                          Converter={StaticResource CollapseOnZero},
                                                          RelativeSource={RelativeSource Self}}"/>
                <Setter Property="GridLinesVisibility" Value="None"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
                <Setter Property="CanUserResizeColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="CanUserSortColumns" Value="False"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
            </Style>


            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightControlBackgroundColorBrush}"/>
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Foreground" Value="{StaticResource LightFontColorBrush}"/>
            </Style>

            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Padding" Value="0,10,0,10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border CornerRadius="0" SnapsToDevicePixels="True"  
                                BorderThickness="0,0,0,1"  
                                BorderBrush="{StaticResource DarkControlBackgroundColorBrush}"  
                                Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" CornerRadius="0" BorderThickness="1" Height="30">
                                    <SelectiveScrollingGrid>
                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                        <SelectiveScrollingGrid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </SelectiveScrollingGrid.RowDefinitions>
                                        <DataGridCellsPresenter Grid.Column="1"
                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="0" />
                                        <DataGridDetailsPresenter Grid.Column="1"
                                                  Grid.Row="1"
                                                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                  Visibility="{TemplateBinding DetailsVisibility}" />
                                    </SelectiveScrollingGrid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1"/>
                                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource DeepPurpleColorBrush}"/>
                                    <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource DarkControlBackgroundColorBrush}"/>
                                    <Setter Property="Foreground" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Margin" Value="10,0,5,0"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--OTHER-->
            <!--Scrollbar Thumbs-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ScrollBars-->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackgroundColorBrush}" />
                <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}" />
                <Setter Property="Width" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>

                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="8" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <!--<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ControlTemplate x:Key="RedPopupErrorTemplate">
                <StackPanel Orientation="Horizontal">
                    <Border BorderThickness="1" BorderBrush="Red">
                        <AdornedElementPlaceholder/>
                    </Border>
                    <Button Style="{StaticResource TransparentImageButton}">
                        <Button.Content>
                            <TextBlock Text="&lt;!&gt;" Foreground="Red"/>
                        </Button.Content>
                        <Button.ToolTip>
                            <TextBlock FontSize="10" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                        </Button.ToolTip>
                    </Button>
                </StackPanel>
            </ControlTemplate>



            <!--Xceed.Wpf.Toolkit.MessageBox-->
            <Style x:Key="MessageBoxButton" TargetType="Button" BasedOn="{StaticResource FlatTileButton}">
                <Setter Property="Background" Value="{StaticResource DarkControlBackgroundColorBrush}"/>
            </Style>
            
            <Style TargetType="{x:Type xctk:MessageBox}">
                <Setter Property="Background" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="ButtonRegionBackground" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightFontColorBrush}"/>
                <Setter Property="OkButtonStyle" Value="{StaticResource MessageBoxButton}"/>
                <Setter Property="CancelButtonStyle" Value="{StaticResource MessageBoxButton}"/>
                <Setter Property="NoButtonStyle" Value="{StaticResource MessageBoxButton}"/>
                <Setter Property="YesButtonStyle" Value="{StaticResource MessageBoxButton}"/>
                <Setter Property="BorderBrush" Value="{StaticResource WindowBackgroundColorBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="WindowBorderThickness" Value="0"/>
                <Setter Property="WindowBackground" Value="{StaticResource LightControlBackgroundColorBrush}"/>
                <Setter Property="CaptionForeground" Value="{StaticResource DarkFontColorBrush}"/>
                <Setter Property="WindowThickness" Value="0"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
